// Package server ...
package server

import (
	"eticket/bootstrap"
	"eticket/config"
	defaultHandler "eticket/handler/http"
	authHandler "eticket/handler/http/auth"
	masterdataHandler "eticket/handler/http/masterdata"
	"eticket/middleware"

	// "eticket/middleware"

	_ "eticket/docs" // docs is generated by Swag CLI

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"
)

// HTTPRouter ...
// @title Eticket API
// @version 1.0.0-Beta
// @description Eticket API Documentation
// @schemes http https
// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
func (h *HTTPApi) HTTPRouter(router *fiber.App, bs *bootstrap.Bootstrap, cfg *config.Config) {
	handler := defaultHandler.NewHandler(bs)
	router.Get("/swagger/*", swagger.HandlerDefault) // Default /swagger/index.html

	mid := middleware.New(bs, cfg)

	v1 := router.Group("/v1")

	auth := authHandler.NewHandler(bs)
	authV1 := v1.Group("/authorize")
	authV1.Post("/login", auth.ValidateCredential)

	masterdataV1 := v1.Group("/masterdata")

	masterData := masterdataHandler.NewHandler(bs)
	terminalV1 := masterdataV1.Group("/terminals", mid.JWT())
	terminalV1.Post("", masterData.CreateTerminal)
	terminalV1.Get("", masterData.ListTerminals)

	router.Get("/health", handler.EmptyHandler)
}
